@model UniformAndEquipmentManagementSystem.Models.Employee

@{
    ViewData["Title"] = "Employee Details";
    var assignedItems = ViewBag.AssignedItems as List<UniformAndEquipmentManagementSystem.Models.ItemAssignment> ?? new List<UniformAndEquipmentManagementSystem.Models.ItemAssignment>();
    
    // Separate items by type
    var uniforms = assignedItems.Where(ia => ia.Item.ItemType == "Uniform").ToList();
    var equipment = assignedItems.Where(ia => ia.Item.ItemType == "Equipment").ToList();
}

<div class="page-container">
    <div class="page-header">
        <h2>Employee Details</h2>
    </div>

    <div class="details-container">
        <div class="details-section">
            <h3>Personal Information</h3>
            <div class="details-grid">
                <div class="detail-item">
                    <label>Employee ID</label>
                    <span>@Model.EmployeeId</span>
                </div>
                <div class="detail-item">
                    <label>Full Name</label>
                    <span>@Model.FirstName @Model.LastName</span>
                </div>
                <div class="detail-item">
                    <label>NIC</label>
                    <span>@Model.NIC</span>
                </div>
                <div class="detail-item">
                    <label>Gender</label>
                    <span>@Model.Gender</span>
                </div>
                <div class="detail-item">
                    <label>Date of Birth</label>
                    <span>@Model.DateOfBirth.ToString("d")</span>
                </div>
            </div>
        </div>

        <div class="details-section">
            <h3>Contact Information</h3>
            <div class="details-grid">
                <div class="detail-item">
                    <label>Email</label>
                    <span>@Model.Email</span>
                </div>
                <div class="detail-item">
                    <label>Phone</label>
                    <span>@Model.Phone</span>
                </div>
                <div class="detail-item">
                    <label>Address</label>
                    <span>@Model.Address</span>
                </div>
            </div>
        </div>

        <div class="details-section">
            <h3>Employment Information</h3>
            <div class="details-grid">
                <div class="detail-item">
                    <label>Department</label>
                    <span>@(Model.Department?.Name ?? "Not Assigned")</span>
                </div>
                <div class="detail-item">
                    <label>Position</label>
                    <span>@Model.Position</span>
                </div>
                <div class="detail-item">
                    <label>Join Date</label>
                    <span>@Model.JoinDate.ToString("d")</span>
                </div>
                <div class="detail-item">
                    <label>Status</label>
                    <span class="badge @(Model.IsActive ? "badge-success" : "badge-danger")">
                        @(Model.IsActive ? "Active" : "Inactive")
                    </span>
                </div>
            </div>
        </div>

        <!-- Assigned Items Section -->
        <div class="details-section">
            <h3>
                <i class="fas fa-boxes"></i>
                Assigned Items (@assignedItems.Count)
            </h3>
            
            @if (assignedItems.Any())
            {
                <div class="assigned-items-container">
                    <!-- Uniforms Section -->
                    @if (uniforms.Any())
                    {
                        <div class="items-subsection">
                            <h4 class="subsection-title uniforms-title">
                                <i class="fas fa-tshirt"></i>
                                Uniforms (@uniforms.Count)
                            </h4>
                            <div class="items-grid">
                                @foreach (var assignment in uniforms)
                                {
                                    <div class="assigned-item-card uniform-item">
                                        <div class="item-header">
                                            <h5 class="item-name">@assignment.Item.ItemName</h5>
                                            <span class="assignment-date">Assigned: @assignment.AssignedDate.ToString("MMM dd, yyyy")</span>
                                        </div>
                                        <div class="item-details">
                                            <div class="detail-row">
                                                <span class="detail-label">Material:</span>
                                                <span class="detail-value">@assignment.Item.Material</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label">Price:</span>
                                                <span class="detail-value price">Rs. @assignment.Item.Price.ToString("N2")</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label">Supplier:</span>
                                                <span class="detail-value supplier">@assignment.Item.Supplier?.CompanyName</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label">Status:</span>
                                                <span class="detail-value status @assignment.Status.ToLower()">@assignment.Status</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }

                    <!-- Equipment Section -->
                    @if (equipment.Any())
                    {
                        <div class="items-subsection">
                            <h4 class="subsection-title equipment-title">
                                <i class="fas fa-tools"></i>
                                Equipment (@equipment.Count)
                            </h4>
                            <div class="items-grid">
                                @foreach (var assignment in equipment)
                                {
                                    <div class="assigned-item-card equipment-item">
                                        <div class="item-header">
                                            <h5 class="item-name">@assignment.Item.ItemName</h5>
                                            <span class="assignment-date">Assigned: @assignment.AssignedDate.ToString("MMM dd, yyyy")</span>
                                        </div>
                                        <div class="item-details">
                                            <div class="detail-row">
                                                <span class="detail-label">Material:</span>
                                                <span class="detail-value">@assignment.Item.Material</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label">Price:</span>
                                                <span class="detail-value price">Rs. @assignment.Item.Price.ToString("N2")</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label">Supplier:</span>
                                                <span class="detail-value supplier">@assignment.Item.Supplier?.CompanyName</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label">Status:</span>
                                                <span class="detail-value status @assignment.Status.ToLower()">@assignment.Status</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="no-items-message">
                    <i class="fas fa-box-open"></i>
                    <p>No items have been assigned to this employee yet.</p>
                    @if (User.IsInRole("Admin") && Model.Role == "Employee")
                    {
                        <a asp-action="AssignItems" asp-route-id="@Model.Id" class="btn btn-primary">
                            <i class="fas fa-plus"></i>
                            Assign Items
                        </a>
                    }
                </div>
            }
        </div>
    </div>

    <div class="form-actions">
        <a asp-action="Index" class="btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to List
        </a>
        @if (User.IsInRole("Admin"))
        {
            <a asp-action="ResetPassword" asp-route-id="@Model.Id" class="btn-warning">
                <i class="fas fa-key"></i> Reset Password
            </a>
            @if (Model.Role == "Employee")
            {
                <a asp-action="AssignItems" asp-route-id="@Model.Id" class="btn-success">
                    <i class="fas fa-boxes"></i> Assign Items
                </a>
            }
        }
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn-primary">
            <i class="fas fa-edit"></i> Edit
        </a>
        <a asp-action="DownloadPdf" asp-route-id="@Model.Id" class="btn-info">
            <i class="fas fa-file-pdf"></i> Download PDF
        </a>
    </div>
</div>

<style>
    .page-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .page-header {
        margin-bottom: 30px;
        border-bottom: 2px solid #eee;
        padding-bottom: 10px;
    }

    .details-container {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 20px;
        margin-bottom: 20px;
    }

    .details-section {
        margin-bottom: 30px;
    }

    .details-section h3 {
        color: #333;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #eee;
    }

    .details-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
    }

    .detail-item {
        display: flex;
        flex-direction: column;
    }

    .detail-item label {
        font-weight: 600;
        color: #666;
        margin-bottom: 5px;
    }

    .detail-item span {
        color: #333;
    }

    .badge {
        display: inline-block;
        padding: 6px 12px;
        border-radius: 4px;
        font-size: 0.875rem;
    }

    .badge-success {
        background-color: #28a745;
        color: white;
    }

    .badge-danger {
        background-color: #dc3545;
        color: white;
    }

    .form-actions {
        display: flex;
        gap: 10px;
        margin-top: 20px;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 8px 16px;
        border-radius: 4px;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.2s;
        border: none;
        cursor: pointer;
    }

    .btn:hover {
        opacity: 0.9;
        transform: translateY(-1px);
    }

    .btn i {
        font-size: 1rem;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

    .btn-warning {
        background-color: #ffc107;
        color: #000;
    }

    .btn-info {
        background-color: #17a2b8;
        color: white;
    }

    .btn-success {
        background-color: #28a745;
        color: white;
    }

    /* Assigned Items Styles */
    .assigned-items-container {
        margin-top: 20px;
    }

    .items-subsection {
        margin-bottom: 30px;
    }

    .subsection-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 15px;
        padding: 10px 15px;
        border-radius: 6px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .uniforms-title {
        background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);
        color: white;
    }

    .equipment-title {
        background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
        color: #2c3e50;
    }

    .assigned-item-card {
        background: white;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .assigned-item-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

    .uniform-item {
        border-left: 4px solid #ff9a9e;
    }

    .equipment-item {
        border-left: 4px solid #a8edea;
    }

    .item-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 12px;
        padding-bottom: 8px;
        border-bottom: 1px solid #f1f3f4;
    }

    .item-name {
        margin: 0;
        font-weight: 600;
        color: #2c3e50;
        font-size: 1rem;
    }

    .assignment-date {
        font-size: 0.85rem;
        color: #7f8c8d;
        background: #f8f9fa;
        padding: 4px 8px;
        border-radius: 4px;
    }

    .item-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 8px;
    }

    .detail-row {
        display: flex;
        justify-content: space-between;
        font-size: 0.9rem;
    }

    .detail-label {
        font-weight: 500;
        color: #7f8c8d;
    }

    .detail-value {
        font-weight: 600;
        color: #2c3e50;
    }

    .price {
        color: #27ae60;
    }

    .supplier {
        color: #3498db;
    }

    .status {
        padding: 2px 8px;
        border-radius: 12px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .status.assigned {
        background: #e8f5e8;
        color: #27ae60;
    }

    .status.returned {
        background: #fff3cd;
        color: #856404;
    }

    .status.maintenance {
        background: #f8d7da;
        color: #721c24;
    }

    .no-items-message {
        text-align: center;
        padding: 40px 20px;
        color: #7f8c8d;
        background: #f8f9fa;
        border-radius: 8px;
        border: 2px dashed #dee2e6;
    }

    .no-items-message i {
        font-size: 3rem;
        margin-bottom: 15px;
        opacity: 0.5;
    }

    .no-items-message p {
        margin-bottom: 20px;
        font-size: 1.1rem;
    }

    @@media (max-width: 768px) {
        .item-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 8px;
        }

        .item-details {
            grid-template-columns: 1fr;
        }

        .detail-row {
            flex-direction: column;
            gap: 4px;
        }
    }
</style>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
} 